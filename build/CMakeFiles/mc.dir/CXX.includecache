#IncludeRegexLine: ^[ 	]*#[ 	]*(include|import)[ 	]*[<"]([^">]+)([">])

#IncludeRegexScan: ^.*$

#IncludeRegexComplain: ^$

#IncludeRegexTransform: 

/home/jake/Code/mc3/decl.hpp
token.hpp
/home/jake/Code/mc3/token.hpp
expr.hpp
/home/jake/Code/mc3/expr.hpp
type.hpp
/home/jake/Code/mc3/type.hpp
vector
-

/home/jake/Code/mc3/expr.hpp
vector
-
decl.hpp
/home/jake/Code/mc3/decl.hpp
type.hpp
/home/jake/Code/mc3/type.hpp

/home/jake/Code/mc3/lexer.hpp
string
-
cassert
-
math.h
-
token.hpp
/home/jake/Code/mc3/token.hpp
symbol.hpp
/home/jake/Code/mc3/symbol.hpp

/home/jake/Code/mc3/main.cpp
iostream
-
fstream
-
string
-
parser.hpp
/home/jake/Code/mc3/parser.hpp

/home/jake/Code/mc3/parser.hpp
lexer.hpp
/home/jake/Code/mc3/lexer.hpp
semantics.hpp
/home/jake/Code/mc3/semantics.hpp

/home/jake/Code/mc3/semantics.hpp
unordered_map
-
statement.hpp
/home/jake/Code/mc3/statement.hpp
expr.hpp
/home/jake/Code/mc3/expr.hpp
type.hpp
/home/jake/Code/mc3/type.hpp
token.hpp
/home/jake/Code/mc3/token.hpp
decl.hpp
/home/jake/Code/mc3/decl.hpp

/home/jake/Code/mc3/statement.hpp
expr.hpp
/home/jake/Code/mc3/expr.hpp
decl.hpp
/home/jake/Code/mc3/decl.hpp
expr.hpp
/home/jake/Code/mc3/expr.hpp
vector
-

/home/jake/Code/mc3/symbol.hpp
unordered_set
-

/home/jake/Code/mc3/token.hpp
iostream
-
iomanip
-
bitset
-
symbol.hpp
/home/jake/Code/mc3/symbol.hpp

/home/jake/Code/mc3/type.hpp
vector
-

